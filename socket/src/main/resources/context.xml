<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2002-2016 XianYu Game Co. Ltd, The Inuyasha Project
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-4.2.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<import resource="spring-mybatis.xml"/>-->
    <!-- 游戏服务器默认的配置文件 -->
    <context:property-placeholder location="classpath:/server.properties,classpath:jdbc.properties"/>
    <context:component-scan base-package="com"/>
    <!--<context:component-scan base-package="com.xx"/>-->

    <context:annotation-config/>

    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true"/>

    <!--<task:token-driven scheduler="taskScheduler"/>-->
    <!--<task:scheduler id="taskScheduler" pool-size="5"/>-->

    <bean id="dispatcher" class="com.xx.server.message.PacketMessageDispatcher"/>

    <bean id="socketServerHandler" class="com.xx.server.server.SocketServerHandler">
        <property name="corePoolSize" value="${executor.core_pool_size}"/>
        <property name="maxPoolSize" value="${executor.max_pool_size}"/>
        <property name="threadKeepAliveTime" value="${executor.thread_keep_alive_time}"/>
        <property name="workQueueSize" value="${executor.work_queue_size}"/>

        <property name="messageDispatcher" ref="dispatcher"/>
    </bean>

    <bean id="app" class="com.xx.server.server.Application" init-method="start" destroy-method="stop"/>

    <bean id="socketServer" class="com.xx.server.server.SocketServer" init-method="start"
          destroy-method="stop">
        <constructor-arg name="port" value="${server.port}"/>
        <property name="keepAliveTimeout" value="${keep_alive_timeout}"/>
        <property name="handler" ref="socketServerHandler"/>
        <property name="messageDispatcher" ref="dispatcher"/>
    </bean>
    <!--spring 工具类-->
    <bean id="springContextUtil" class="com.xx.server.util.SpringContextUtil" />
</beans>